    Application structure
        Configurations in a separate folder (e.g. config)
            Test configurations separate from production configurations
            Configurations loaded from environmental variables or e.g. dotenv -files

    Users

    Authentication

    Middleware
        The application has middleware that logs all requests made to the application
            Logged information contains current time, request method, requested path, and user id (or anonymous if not authenticated)
        .The application has middleware that controls access to the application
            Landing page at / is accessible to all
            Paths starting with /api are accessible to all
            Paths starting with /auth are accessible to all
            Other paths require that the user is authenticated
                Non-authenticated users are redirected to the login form at /auth/login
        .Application has middleware that controls access to static files
            Static files are placed under /static

    Reporting

    Summarization

    Testing
        The application has at least 5 meaningful automated tests. All tests detect if e.g. tested functionality is changed so that it no longer works as expected.
        The application has at least 10 meaningful automated tests. All tests detect if e.g. tested functionality is changed so that it no longer works as expected.
        The application has at least 15 meaningful automated tests. All tests detect if e.g. tested functionality is changed so that it no longer works as expected.
        The application has at least 20 meaningful automated tests. All tests detect if e.g. tested functionality is changed so that it no longer works as expected.

    Security

    Database
        Indices are used when joining tables if the queries are such that they are used often
        Database credentials are not included in the code

    User interface / views
        User interface uses a style library or self-made stylesheets (see e.g. Twitter Bootstrap for a style library)
            If Twitter Bootstrap or other external style libraries are used, they are used over a content delivery network
        Different pages of the application follow the same style
        User sees if the user has logged in (e.g. with a message 'Logged in as my@email.net' shown at the top of the page)

    APIs
        .The API is accessible by all
        The API allows cross-origin requests
        Endpoint /api/summary/:year/:month/:day provides a JSON document with averages for sleep duration, time spent on sports and exercise, time spent studying, sleep quality, and generic mood for the given day

    Deployment
        Application is available and working in an online location (e.g. Heroku) at an address provided in the documentation
        Application can be run locally following the guidelines in documentation

    Documentation
        Documentation contains necessary CREATE TABLE statements needed to create the database used by the application
        Documentation contains the address at which the application can currently be accessed
        Documentation contains guidelines for running the application
        Documentation contains guidelines for running tests